<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright © 2021 Travis Hoffman (travis@firkin.io)
  ~ Copyright © 2021 Firkin IO (https://firkin.io/)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>kstreams</artifactId>
        <groupId>io.firkin.kstreams</groupId>
        <version>0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>kstreams-error-normalizer</artifactId>
    <dependencies>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>${io.confluent.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-streams-avro-serde</artifactId>
            <version>${io.confluent.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-connect-avro-converter</artifactId>
            <version>${io.confluent.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.kafka/connect-transforms -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-transforms</artifactId>
            <version>${apache.kafka.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>1.0.2</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
        <dependency>
            <!-- needed for the generated Avro code -->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.12.3</version>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>1.15.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.15.2</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-serializer</artifactId>
            <version>6.1.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.firkin.kstreams</groupId>
            <artifactId>kstreams-parent</artifactId>
            <version>0.1-SNAPSHOT</version>
            <type>pom</type>
        </dependency>

        <!--        <dependency>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro-tools</artifactId>
                    <version>${apache.avro.version}</version>
                    <type>jar</type>
                    <scope>compile</scope>
                </dependency> -->

    </dependencies>

    <properties>
    </properties>

    <build>
        <plugins>
            <!-- avro -> java code generation -->
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>${apache.avro.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <!-- generate code from avro avsc schema files -->
                            <goal>schema</goal>
                            <!-- generate code from avro avdl protocol files -->
                            <goal>idl-protocol</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/avro/</sourceDirectory>
                            <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- avro protocol -> avro schema -->
            <plugin>
                <!-- TODO This needs work
                  Command line:
                  $> java -jar ~/.m2/repository/org/apache/avro/avro-tools/1.10.2/avro-tools-1.10.2.jar idl2schemata ./kstreams-error-normalizer/src/main/avro/io/firkin/kstreams/normalizer/errors/NormalizeErrorProtocol.avdl ./kstreams-error-normalizer/src/main/avro/io/firkin/kstreams/normalizer/errors
                  -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>org.apache.avro.tool.Main</mainClass>
                    <includePluginDependencies>true</includePluginDependencies>
                    <includeProjectDependencies>false</includeProjectDependencies>
                    <executableDependency>
                        <dependency>
                            <groupId>org.apache.avro</groupId>
                            <artifactId>avro-tools</artifactId>
                        </dependency>
                    </executableDependency>
                    <arguments>
                        <argument>-jar</argument>
                        <argument>~/.m2/repository/org/apache/avro/avro-tools/${apache.avro.version}/avro-tools-${apache.avro.version}.jar</argument>
                        <argument>src/main/avro/**/*.avdl</argument>
                    </arguments>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.avro</groupId>
                        <artifactId>avro-tools</artifactId>
                        <version>${apache.avro.version}</version>
                        <type>jar</type>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- copy *.avsc files over as resources for tests to load -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testResources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/test-classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/avro</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>