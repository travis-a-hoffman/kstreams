/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.firkin.kstreams.normalizer.errors.v1.avdl;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Example Model for errors like those which might arise from a Source Connector. Errors of this type will need to be mapped to a common schema. */
@org.apache.avro.specific.AvroGenerated
public class ExampleOneError extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3347290147859909162L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ExampleOneError\",\"namespace\":\"io.firkin.kstreams.normalizer.errors.v1.avdl\",\"doc\":\"Example Model for errors like those which might arise from a Source Connector. Errors of this type will need to be mapped to a common schema.\",\"fields\":[{\"name\":\"timestamp\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"The timestamp of when the error occurred, in Unix epoch time UTC (required)\"},{\"name\":\"correlation_id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"},\"doc\":\"Unique id for event tracing (required)\"},{\"name\":\"environment_id\",\"type\":[\"null\",\"string\"],\"doc\":\"Environment where the error took place (optional)\",\"default\":null},{\"name\":\"application_id\",\"type\":[\"null\",\"string\"],\"doc\":\"Application where the error took place (optional)\",\"default\":null},{\"name\":\"instance_id\",\"type\":[\"null\",\"string\"],\"doc\":\"Instance where the error took place (optional)\",\"default\":null},{\"name\":\"metadata\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Metadata from the source system (optional)\",\"default\":null},{\"name\":\"data\",\"type\":[\"null\",\"bytes\"],\"doc\":\"Data from the source system (optional)\",\"default\":null},{\"name\":\"upstream_metadata\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"doc\":\"Metadata from the upstream system (required)\",\"default\":{}},{\"name\":\"upstream_data\",\"type\":[\"null\",\"bytes\"],\"doc\":\"Data which caused the error (optional)\",\"default\":null},{\"name\":\"upstream_url\",\"type\":[\"null\",\"string\"],\"doc\":\"URL which caused the error (optional)\",\"default\":null},{\"name\":\"upstream_response\",\"type\":[\"null\",\"string\"],\"doc\":\"Response from the upstream system (optional)\",\"default\":null},{\"name\":\"kafka_cluster\",\"type\":[\"null\",\"string\"],\"doc\":\"Intended kafka cluster (optional)\",\"default\":null},{\"name\":\"success_topic\",\"type\":[\"null\",\"string\"],\"doc\":\"Intended topic for success (optional)\",\"default\":null},{\"name\":\"error_topic\",\"type\":[\"null\",\"string\"],\"doc\":\"Intended topic for error (optional)\",\"default\":null}],\"aliases\":[\"BaseError\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<ExampleOneError> ENCODER =
      new BinaryMessageEncoder<ExampleOneError>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ExampleOneError> DECODER =
      new BinaryMessageDecoder<ExampleOneError>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ExampleOneError> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ExampleOneError> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ExampleOneError> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ExampleOneError>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ExampleOneError to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ExampleOneError from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ExampleOneError instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ExampleOneError fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The timestamp of when the error occurred, in Unix epoch time UTC (required) */
   private java.time.Instant timestamp;
  /** Unique id for event tracing (required) */
   private java.lang.CharSequence correlation_id;
  /** Environment where the error took place (optional) */
   private java.lang.CharSequence environment_id;
  /** Application where the error took place (optional) */
   private java.lang.CharSequence application_id;
  /** Instance where the error took place (optional) */
   private java.lang.CharSequence instance_id;
  /** Metadata from the source system (optional) */
   private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata;
  /** Data from the source system (optional) */
   private java.nio.ByteBuffer data;
  /** Metadata from the upstream system (required) */
   private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> upstream_metadata;
  /** Data which caused the error (optional) */
   private java.nio.ByteBuffer upstream_data;
  /** URL which caused the error (optional) */
   private java.lang.CharSequence upstream_url;
  /** Response from the upstream system (optional) */
   private java.lang.CharSequence upstream_response;
  /** Intended kafka cluster (optional) */
   private java.lang.CharSequence kafka_cluster;
  /** Intended topic for success (optional) */
   private java.lang.CharSequence success_topic;
  /** Intended topic for error (optional) */
   private java.lang.CharSequence error_topic;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ExampleOneError() {}

  /**
   * All-args constructor.
   * @param timestamp The timestamp of when the error occurred, in Unix epoch time UTC (required)
   * @param correlation_id Unique id for event tracing (required)
   * @param environment_id Environment where the error took place (optional)
   * @param application_id Application where the error took place (optional)
   * @param instance_id Instance where the error took place (optional)
   * @param metadata Metadata from the source system (optional)
   * @param data Data from the source system (optional)
   * @param upstream_metadata Metadata from the upstream system (required)
   * @param upstream_data Data which caused the error (optional)
   * @param upstream_url URL which caused the error (optional)
   * @param upstream_response Response from the upstream system (optional)
   * @param kafka_cluster Intended kafka cluster (optional)
   * @param success_topic Intended topic for success (optional)
   * @param error_topic Intended topic for error (optional)
   */
  public ExampleOneError(java.time.Instant timestamp, java.lang.CharSequence correlation_id, java.lang.CharSequence environment_id, java.lang.CharSequence application_id, java.lang.CharSequence instance_id, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata, java.nio.ByteBuffer data, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> upstream_metadata, java.nio.ByteBuffer upstream_data, java.lang.CharSequence upstream_url, java.lang.CharSequence upstream_response, java.lang.CharSequence kafka_cluster, java.lang.CharSequence success_topic, java.lang.CharSequence error_topic) {
    this.timestamp = timestamp.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.correlation_id = correlation_id;
    this.environment_id = environment_id;
    this.application_id = application_id;
    this.instance_id = instance_id;
    this.metadata = metadata;
    this.data = data;
    this.upstream_metadata = upstream_metadata;
    this.upstream_data = upstream_data;
    this.upstream_url = upstream_url;
    this.upstream_response = upstream_response;
    this.kafka_cluster = kafka_cluster;
    this.success_topic = success_topic;
    this.error_topic = error_topic;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timestamp;
    case 1: return correlation_id;
    case 2: return environment_id;
    case 3: return application_id;
    case 4: return instance_id;
    case 5: return metadata;
    case 6: return data;
    case 7: return upstream_metadata;
    case 8: return upstream_data;
    case 9: return upstream_url;
    case 10: return upstream_response;
    case 11: return kafka_cluster;
    case 12: return success_topic;
    case 13: return error_topic;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timestamp = (java.time.Instant)value$; break;
    case 1: correlation_id = (java.lang.CharSequence)value$; break;
    case 2: environment_id = (java.lang.CharSequence)value$; break;
    case 3: application_id = (java.lang.CharSequence)value$; break;
    case 4: instance_id = (java.lang.CharSequence)value$; break;
    case 5: metadata = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 6: data = (java.nio.ByteBuffer)value$; break;
    case 7: upstream_metadata = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 8: upstream_data = (java.nio.ByteBuffer)value$; break;
    case 9: upstream_url = (java.lang.CharSequence)value$; break;
    case 10: upstream_response = (java.lang.CharSequence)value$; break;
    case 11: kafka_cluster = (java.lang.CharSequence)value$; break;
    case 12: success_topic = (java.lang.CharSequence)value$; break;
    case 13: error_topic = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The timestamp of when the error occurred, in Unix epoch time UTC (required)
   */
  public java.time.Instant getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * The timestamp of when the error occurred, in Unix epoch time UTC (required)
   * @param value the value to set.
   */
  public void setTimestamp(java.time.Instant value) {
    this.timestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'correlation_id' field.
   * @return Unique id for event tracing (required)
   */
  public java.lang.CharSequence getCorrelationId() {
    return correlation_id;
  }


  /**
   * Sets the value of the 'correlation_id' field.
   * Unique id for event tracing (required)
   * @param value the value to set.
   */
  public void setCorrelationId(java.lang.CharSequence value) {
    this.correlation_id = value;
  }

  /**
   * Gets the value of the 'environment_id' field.
   * @return Environment where the error took place (optional)
   */
  public java.lang.CharSequence getEnvironmentId() {
    return environment_id;
  }


  /**
   * Sets the value of the 'environment_id' field.
   * Environment where the error took place (optional)
   * @param value the value to set.
   */
  public void setEnvironmentId(java.lang.CharSequence value) {
    this.environment_id = value;
  }

  /**
   * Gets the value of the 'application_id' field.
   * @return Application where the error took place (optional)
   */
  public java.lang.CharSequence getApplicationId() {
    return application_id;
  }


  /**
   * Sets the value of the 'application_id' field.
   * Application where the error took place (optional)
   * @param value the value to set.
   */
  public void setApplicationId(java.lang.CharSequence value) {
    this.application_id = value;
  }

  /**
   * Gets the value of the 'instance_id' field.
   * @return Instance where the error took place (optional)
   */
  public java.lang.CharSequence getInstanceId() {
    return instance_id;
  }


  /**
   * Sets the value of the 'instance_id' field.
   * Instance where the error took place (optional)
   * @param value the value to set.
   */
  public void setInstanceId(java.lang.CharSequence value) {
    this.instance_id = value;
  }

  /**
   * Gets the value of the 'metadata' field.
   * @return Metadata from the source system (optional)
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getMetadata() {
    return metadata;
  }


  /**
   * Sets the value of the 'metadata' field.
   * Metadata from the source system (optional)
   * @param value the value to set.
   */
  public void setMetadata(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.metadata = value;
  }

  /**
   * Gets the value of the 'data' field.
   * @return Data from the source system (optional)
   */
  public java.nio.ByteBuffer getData() {
    return data;
  }


  /**
   * Sets the value of the 'data' field.
   * Data from the source system (optional)
   * @param value the value to set.
   */
  public void setData(java.nio.ByteBuffer value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'upstream_metadata' field.
   * @return Metadata from the upstream system (required)
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getUpstreamMetadata() {
    return upstream_metadata;
  }


  /**
   * Sets the value of the 'upstream_metadata' field.
   * Metadata from the upstream system (required)
   * @param value the value to set.
   */
  public void setUpstreamMetadata(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.upstream_metadata = value;
  }

  /**
   * Gets the value of the 'upstream_data' field.
   * @return Data which caused the error (optional)
   */
  public java.nio.ByteBuffer getUpstreamData() {
    return upstream_data;
  }


  /**
   * Sets the value of the 'upstream_data' field.
   * Data which caused the error (optional)
   * @param value the value to set.
   */
  public void setUpstreamData(java.nio.ByteBuffer value) {
    this.upstream_data = value;
  }

  /**
   * Gets the value of the 'upstream_url' field.
   * @return URL which caused the error (optional)
   */
  public java.lang.CharSequence getUpstreamUrl() {
    return upstream_url;
  }


  /**
   * Sets the value of the 'upstream_url' field.
   * URL which caused the error (optional)
   * @param value the value to set.
   */
  public void setUpstreamUrl(java.lang.CharSequence value) {
    this.upstream_url = value;
  }

  /**
   * Gets the value of the 'upstream_response' field.
   * @return Response from the upstream system (optional)
   */
  public java.lang.CharSequence getUpstreamResponse() {
    return upstream_response;
  }


  /**
   * Sets the value of the 'upstream_response' field.
   * Response from the upstream system (optional)
   * @param value the value to set.
   */
  public void setUpstreamResponse(java.lang.CharSequence value) {
    this.upstream_response = value;
  }

  /**
   * Gets the value of the 'kafka_cluster' field.
   * @return Intended kafka cluster (optional)
   */
  public java.lang.CharSequence getKafkaCluster() {
    return kafka_cluster;
  }


  /**
   * Sets the value of the 'kafka_cluster' field.
   * Intended kafka cluster (optional)
   * @param value the value to set.
   */
  public void setKafkaCluster(java.lang.CharSequence value) {
    this.kafka_cluster = value;
  }

  /**
   * Gets the value of the 'success_topic' field.
   * @return Intended topic for success (optional)
   */
  public java.lang.CharSequence getSuccessTopic() {
    return success_topic;
  }


  /**
   * Sets the value of the 'success_topic' field.
   * Intended topic for success (optional)
   * @param value the value to set.
   */
  public void setSuccessTopic(java.lang.CharSequence value) {
    this.success_topic = value;
  }

  /**
   * Gets the value of the 'error_topic' field.
   * @return Intended topic for error (optional)
   */
  public java.lang.CharSequence getErrorTopic() {
    return error_topic;
  }


  /**
   * Sets the value of the 'error_topic' field.
   * Intended topic for error (optional)
   * @param value the value to set.
   */
  public void setErrorTopic(java.lang.CharSequence value) {
    this.error_topic = value;
  }

  /**
   * Creates a new ExampleOneError RecordBuilder.
   * @return A new ExampleOneError RecordBuilder
   */
  public static io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder newBuilder() {
    return new io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder();
  }

  /**
   * Creates a new ExampleOneError RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ExampleOneError RecordBuilder
   */
  public static io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder newBuilder(io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder other) {
    if (other == null) {
      return new io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder();
    } else {
      return new io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder(other);
    }
  }

  /**
   * Creates a new ExampleOneError RecordBuilder by copying an existing ExampleOneError instance.
   * @param other The existing instance to copy.
   * @return A new ExampleOneError RecordBuilder
   */
  public static io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder newBuilder(io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError other) {
    if (other == null) {
      return new io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder();
    } else {
      return new io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder(other);
    }
  }

  /**
   * RecordBuilder for ExampleOneError instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ExampleOneError>
    implements org.apache.avro.data.RecordBuilder<ExampleOneError> {

    /** The timestamp of when the error occurred, in Unix epoch time UTC (required) */
    private java.time.Instant timestamp;
    /** Unique id for event tracing (required) */
    private java.lang.CharSequence correlation_id;
    /** Environment where the error took place (optional) */
    private java.lang.CharSequence environment_id;
    /** Application where the error took place (optional) */
    private java.lang.CharSequence application_id;
    /** Instance where the error took place (optional) */
    private java.lang.CharSequence instance_id;
    /** Metadata from the source system (optional) */
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata;
    /** Data from the source system (optional) */
    private java.nio.ByteBuffer data;
    /** Metadata from the upstream system (required) */
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> upstream_metadata;
    /** Data which caused the error (optional) */
    private java.nio.ByteBuffer upstream_data;
    /** URL which caused the error (optional) */
    private java.lang.CharSequence upstream_url;
    /** Response from the upstream system (optional) */
    private java.lang.CharSequence upstream_response;
    /** Intended kafka cluster (optional) */
    private java.lang.CharSequence kafka_cluster;
    /** Intended topic for success (optional) */
    private java.lang.CharSequence success_topic;
    /** Intended topic for error (optional) */
    private java.lang.CharSequence error_topic;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.correlation_id)) {
        this.correlation_id = data().deepCopy(fields()[1].schema(), other.correlation_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.environment_id)) {
        this.environment_id = data().deepCopy(fields()[2].schema(), other.environment_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.application_id)) {
        this.application_id = data().deepCopy(fields()[3].schema(), other.application_id);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.instance_id)) {
        this.instance_id = data().deepCopy(fields()[4].schema(), other.instance_id);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.metadata)) {
        this.metadata = data().deepCopy(fields()[5].schema(), other.metadata);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.data)) {
        this.data = data().deepCopy(fields()[6].schema(), other.data);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.upstream_metadata)) {
        this.upstream_metadata = data().deepCopy(fields()[7].schema(), other.upstream_metadata);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.upstream_data)) {
        this.upstream_data = data().deepCopy(fields()[8].schema(), other.upstream_data);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.upstream_url)) {
        this.upstream_url = data().deepCopy(fields()[9].schema(), other.upstream_url);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.upstream_response)) {
        this.upstream_response = data().deepCopy(fields()[10].schema(), other.upstream_response);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.kafka_cluster)) {
        this.kafka_cluster = data().deepCopy(fields()[11].schema(), other.kafka_cluster);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.success_topic)) {
        this.success_topic = data().deepCopy(fields()[12].schema(), other.success_topic);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.error_topic)) {
        this.error_topic = data().deepCopy(fields()[13].schema(), other.error_topic);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing ExampleOneError instance
     * @param other The existing instance to copy.
     */
    private Builder(io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.correlation_id)) {
        this.correlation_id = data().deepCopy(fields()[1].schema(), other.correlation_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.environment_id)) {
        this.environment_id = data().deepCopy(fields()[2].schema(), other.environment_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.application_id)) {
        this.application_id = data().deepCopy(fields()[3].schema(), other.application_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.instance_id)) {
        this.instance_id = data().deepCopy(fields()[4].schema(), other.instance_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.metadata)) {
        this.metadata = data().deepCopy(fields()[5].schema(), other.metadata);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.data)) {
        this.data = data().deepCopy(fields()[6].schema(), other.data);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.upstream_metadata)) {
        this.upstream_metadata = data().deepCopy(fields()[7].schema(), other.upstream_metadata);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.upstream_data)) {
        this.upstream_data = data().deepCopy(fields()[8].schema(), other.upstream_data);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.upstream_url)) {
        this.upstream_url = data().deepCopy(fields()[9].schema(), other.upstream_url);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.upstream_response)) {
        this.upstream_response = data().deepCopy(fields()[10].schema(), other.upstream_response);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.kafka_cluster)) {
        this.kafka_cluster = data().deepCopy(fields()[11].schema(), other.kafka_cluster);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.success_topic)) {
        this.success_topic = data().deepCopy(fields()[12].schema(), other.success_topic);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.error_topic)) {
        this.error_topic = data().deepCopy(fields()[13].schema(), other.error_topic);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'timestamp' field.
      * The timestamp of when the error occurred, in Unix epoch time UTC (required)
      * @return The value.
      */
    public java.time.Instant getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * The timestamp of when the error occurred, in Unix epoch time UTC (required)
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setTimestamp(java.time.Instant value) {
      validate(fields()[0], value);
      this.timestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * The timestamp of when the error occurred, in Unix epoch time UTC (required)
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * The timestamp of when the error occurred, in Unix epoch time UTC (required)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearTimestamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'correlation_id' field.
      * Unique id for event tracing (required)
      * @return The value.
      */
    public java.lang.CharSequence getCorrelationId() {
      return correlation_id;
    }


    /**
      * Sets the value of the 'correlation_id' field.
      * Unique id for event tracing (required)
      * @param value The value of 'correlation_id'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setCorrelationId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.correlation_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'correlation_id' field has been set.
      * Unique id for event tracing (required)
      * @return True if the 'correlation_id' field has been set, false otherwise.
      */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'correlation_id' field.
      * Unique id for event tracing (required)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearCorrelationId() {
      correlation_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'environment_id' field.
      * Environment where the error took place (optional)
      * @return The value.
      */
    public java.lang.CharSequence getEnvironmentId() {
      return environment_id;
    }


    /**
      * Sets the value of the 'environment_id' field.
      * Environment where the error took place (optional)
      * @param value The value of 'environment_id'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setEnvironmentId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.environment_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'environment_id' field has been set.
      * Environment where the error took place (optional)
      * @return True if the 'environment_id' field has been set, false otherwise.
      */
    public boolean hasEnvironmentId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'environment_id' field.
      * Environment where the error took place (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearEnvironmentId() {
      environment_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'application_id' field.
      * Application where the error took place (optional)
      * @return The value.
      */
    public java.lang.CharSequence getApplicationId() {
      return application_id;
    }


    /**
      * Sets the value of the 'application_id' field.
      * Application where the error took place (optional)
      * @param value The value of 'application_id'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setApplicationId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.application_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'application_id' field has been set.
      * Application where the error took place (optional)
      * @return True if the 'application_id' field has been set, false otherwise.
      */
    public boolean hasApplicationId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'application_id' field.
      * Application where the error took place (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearApplicationId() {
      application_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'instance_id' field.
      * Instance where the error took place (optional)
      * @return The value.
      */
    public java.lang.CharSequence getInstanceId() {
      return instance_id;
    }


    /**
      * Sets the value of the 'instance_id' field.
      * Instance where the error took place (optional)
      * @param value The value of 'instance_id'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setInstanceId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.instance_id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'instance_id' field has been set.
      * Instance where the error took place (optional)
      * @return True if the 'instance_id' field has been set, false otherwise.
      */
    public boolean hasInstanceId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'instance_id' field.
      * Instance where the error took place (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearInstanceId() {
      instance_id = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'metadata' field.
      * Metadata from the source system (optional)
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getMetadata() {
      return metadata;
    }


    /**
      * Sets the value of the 'metadata' field.
      * Metadata from the source system (optional)
      * @param value The value of 'metadata'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setMetadata(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[5], value);
      this.metadata = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'metadata' field has been set.
      * Metadata from the source system (optional)
      * @return True if the 'metadata' field has been set, false otherwise.
      */
    public boolean hasMetadata() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'metadata' field.
      * Metadata from the source system (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearMetadata() {
      metadata = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'data' field.
      * Data from the source system (optional)
      * @return The value.
      */
    public java.nio.ByteBuffer getData() {
      return data;
    }


    /**
      * Sets the value of the 'data' field.
      * Data from the source system (optional)
      * @param value The value of 'data'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setData(java.nio.ByteBuffer value) {
      validate(fields()[6], value);
      this.data = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'data' field has been set.
      * Data from the source system (optional)
      * @return True if the 'data' field has been set, false otherwise.
      */
    public boolean hasData() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'data' field.
      * Data from the source system (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearData() {
      data = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'upstream_metadata' field.
      * Metadata from the upstream system (required)
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getUpstreamMetadata() {
      return upstream_metadata;
    }


    /**
      * Sets the value of the 'upstream_metadata' field.
      * Metadata from the upstream system (required)
      * @param value The value of 'upstream_metadata'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setUpstreamMetadata(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.upstream_metadata = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'upstream_metadata' field has been set.
      * Metadata from the upstream system (required)
      * @return True if the 'upstream_metadata' field has been set, false otherwise.
      */
    public boolean hasUpstreamMetadata() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'upstream_metadata' field.
      * Metadata from the upstream system (required)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearUpstreamMetadata() {
      upstream_metadata = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'upstream_data' field.
      * Data which caused the error (optional)
      * @return The value.
      */
    public java.nio.ByteBuffer getUpstreamData() {
      return upstream_data;
    }


    /**
      * Sets the value of the 'upstream_data' field.
      * Data which caused the error (optional)
      * @param value The value of 'upstream_data'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setUpstreamData(java.nio.ByteBuffer value) {
      validate(fields()[8], value);
      this.upstream_data = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'upstream_data' field has been set.
      * Data which caused the error (optional)
      * @return True if the 'upstream_data' field has been set, false otherwise.
      */
    public boolean hasUpstreamData() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'upstream_data' field.
      * Data which caused the error (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearUpstreamData() {
      upstream_data = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'upstream_url' field.
      * URL which caused the error (optional)
      * @return The value.
      */
    public java.lang.CharSequence getUpstreamUrl() {
      return upstream_url;
    }


    /**
      * Sets the value of the 'upstream_url' field.
      * URL which caused the error (optional)
      * @param value The value of 'upstream_url'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setUpstreamUrl(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.upstream_url = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'upstream_url' field has been set.
      * URL which caused the error (optional)
      * @return True if the 'upstream_url' field has been set, false otherwise.
      */
    public boolean hasUpstreamUrl() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'upstream_url' field.
      * URL which caused the error (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearUpstreamUrl() {
      upstream_url = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'upstream_response' field.
      * Response from the upstream system (optional)
      * @return The value.
      */
    public java.lang.CharSequence getUpstreamResponse() {
      return upstream_response;
    }


    /**
      * Sets the value of the 'upstream_response' field.
      * Response from the upstream system (optional)
      * @param value The value of 'upstream_response'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setUpstreamResponse(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.upstream_response = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'upstream_response' field has been set.
      * Response from the upstream system (optional)
      * @return True if the 'upstream_response' field has been set, false otherwise.
      */
    public boolean hasUpstreamResponse() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'upstream_response' field.
      * Response from the upstream system (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearUpstreamResponse() {
      upstream_response = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'kafka_cluster' field.
      * Intended kafka cluster (optional)
      * @return The value.
      */
    public java.lang.CharSequence getKafkaCluster() {
      return kafka_cluster;
    }


    /**
      * Sets the value of the 'kafka_cluster' field.
      * Intended kafka cluster (optional)
      * @param value The value of 'kafka_cluster'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setKafkaCluster(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.kafka_cluster = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'kafka_cluster' field has been set.
      * Intended kafka cluster (optional)
      * @return True if the 'kafka_cluster' field has been set, false otherwise.
      */
    public boolean hasKafkaCluster() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'kafka_cluster' field.
      * Intended kafka cluster (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearKafkaCluster() {
      kafka_cluster = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'success_topic' field.
      * Intended topic for success (optional)
      * @return The value.
      */
    public java.lang.CharSequence getSuccessTopic() {
      return success_topic;
    }


    /**
      * Sets the value of the 'success_topic' field.
      * Intended topic for success (optional)
      * @param value The value of 'success_topic'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setSuccessTopic(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.success_topic = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'success_topic' field has been set.
      * Intended topic for success (optional)
      * @return True if the 'success_topic' field has been set, false otherwise.
      */
    public boolean hasSuccessTopic() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'success_topic' field.
      * Intended topic for success (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearSuccessTopic() {
      success_topic = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'error_topic' field.
      * Intended topic for error (optional)
      * @return The value.
      */
    public java.lang.CharSequence getErrorTopic() {
      return error_topic;
    }


    /**
      * Sets the value of the 'error_topic' field.
      * Intended topic for error (optional)
      * @param value The value of 'error_topic'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder setErrorTopic(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.error_topic = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'error_topic' field has been set.
      * Intended topic for error (optional)
      * @return True if the 'error_topic' field has been set, false otherwise.
      */
    public boolean hasErrorTopic() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'error_topic' field.
      * Intended topic for error (optional)
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avdl.ExampleOneError.Builder clearErrorTopic() {
      error_topic = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ExampleOneError build() {
      try {
        ExampleOneError record = new ExampleOneError();
        record.timestamp = fieldSetFlags()[0] ? this.timestamp : (java.time.Instant) defaultValue(fields()[0]);
        record.correlation_id = fieldSetFlags()[1] ? this.correlation_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.environment_id = fieldSetFlags()[2] ? this.environment_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.application_id = fieldSetFlags()[3] ? this.application_id : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.instance_id = fieldSetFlags()[4] ? this.instance_id : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.metadata = fieldSetFlags()[5] ? this.metadata : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[5]);
        record.data = fieldSetFlags()[6] ? this.data : (java.nio.ByteBuffer) defaultValue(fields()[6]);
        record.upstream_metadata = fieldSetFlags()[7] ? this.upstream_metadata : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[7]);
        record.upstream_data = fieldSetFlags()[8] ? this.upstream_data : (java.nio.ByteBuffer) defaultValue(fields()[8]);
        record.upstream_url = fieldSetFlags()[9] ? this.upstream_url : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.upstream_response = fieldSetFlags()[10] ? this.upstream_response : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.kafka_cluster = fieldSetFlags()[11] ? this.kafka_cluster : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.success_topic = fieldSetFlags()[12] ? this.success_topic : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.error_topic = fieldSetFlags()[13] ? this.error_topic : (java.lang.CharSequence) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ExampleOneError>
    WRITER$ = (org.apache.avro.io.DatumWriter<ExampleOneError>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ExampleOneError>
    READER$ = (org.apache.avro.io.DatumReader<ExampleOneError>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










