/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.firkin.kstreams.normalizer.errors.v1.avsc;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Example Model for errors like those that might arise from a Source Connector. Errors of this type will need to be mapped to a common schema. */
@org.apache.avro.specific.AvroGenerated
public class ExampleOneError extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6367969886876563741L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ExampleOneError\",\"namespace\":\"io.firkin.kstreams.normalizer.errors.v1.avsc\",\"doc\":\"Example Model for errors like those that might arise from a Source Connector. Errors of this type will need to be mapped to a common schema.\",\"fields\":[{\"name\":\"correlation_id\",\"type\":\"string\",\"doc\":\"Unique id for event tracing\"},{\"name\":\"environment_id\",\"type\":\"string\",\"doc\":\"Environment where the error took place. In this object, the environment can be any string. In NormalizedError, there is an enum which needs to be mapped to.\"},{\"name\":\"service_id\",\"type\":\"string\",\"doc\":\"The identifier of the service. This ...\"},{\"name\":\"exception\",\"type\":\"string\",\"doc\":\"Error information from the connector\"},{\"name\":\"metadata\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"doc\":\"Keys value pairs for any domain specific metadata\"},{\"name\":\"source_message\",\"type\":\"string\",\"doc\":\"Message that caused the error\"},{\"name\":\"source_message_schema_name\",\"type\":\"string\",\"doc\":\"Schema name of the source message\"},{\"name\":\"source_message_offset\",\"type\":\"int\",\"doc\":\"Offset of the source message\"},{\"name\":\"source_url\",\"type\":\"string\",\"doc\":\"URL for the source object\"},{\"name\":\"source_value\",\"type\":\"bytes\",\"doc\":\"The original object from the source service, which caused the error.\"},{\"name\":\"source_schema\",\"type\":\"string\",\"doc\":\"Location to the definition of the source object's schema (if any).\"},{\"name\":\"source_schema_id\",\"type\":\"string\",\"doc\":\"Identifier of the source object's schema.\"},{\"name\":\"topic\",\"type\":\"string\",\"doc\":\"Name of the intended destination topic. In this error, we have a destination topic.\"},{\"name\":\"timestamp\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<ExampleOneError> ENCODER =
      new BinaryMessageEncoder<ExampleOneError>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ExampleOneError> DECODER =
      new BinaryMessageDecoder<ExampleOneError>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ExampleOneError> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ExampleOneError> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ExampleOneError> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ExampleOneError>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ExampleOneError to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ExampleOneError from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ExampleOneError instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ExampleOneError fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Unique id for event tracing */
   private java.lang.CharSequence correlation_id;
  /** Environment where the error took place. In this object, the environment can be any string. In NormalizedError, there is an enum which needs to be mapped to. */
   private java.lang.CharSequence environment_id;
  /** The identifier of the service. This ... */
   private java.lang.CharSequence service_id;
  /** Error information from the connector */
   private java.lang.CharSequence exception;
  /** Keys value pairs for any domain specific metadata */
   private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata;
  /** Message that caused the error */
   private java.lang.CharSequence source_message;
  /** Schema name of the source message */
   private java.lang.CharSequence source_message_schema_name;
  /** Offset of the source message */
   private int source_message_offset;
  /** URL for the source object */
   private java.lang.CharSequence source_url;
  /** The original object from the source service, which caused the error. */
   private java.nio.ByteBuffer source_value;
  /** Location to the definition of the source object's schema (if any). */
   private java.lang.CharSequence source_schema;
  /** Identifier of the source object's schema. */
   private java.lang.CharSequence source_schema_id;
  /** Name of the intended destination topic. In this error, we have a destination topic. */
   private java.lang.CharSequence topic;
   private java.time.LocalDate timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ExampleOneError() {}

  /**
   * All-args constructor.
   * @param correlation_id Unique id for event tracing
   * @param environment_id Environment where the error took place. In this object, the environment can be any string. In NormalizedError, there is an enum which needs to be mapped to.
   * @param service_id The identifier of the service. This ...
   * @param exception Error information from the connector
   * @param metadata Keys value pairs for any domain specific metadata
   * @param source_message Message that caused the error
   * @param source_message_schema_name Schema name of the source message
   * @param source_message_offset Offset of the source message
   * @param source_url URL for the source object
   * @param source_value The original object from the source service, which caused the error.
   * @param source_schema Location to the definition of the source object's schema (if any).
   * @param source_schema_id Identifier of the source object's schema.
   * @param topic Name of the intended destination topic. In this error, we have a destination topic.
   * @param timestamp The new value for timestamp
   */
  public ExampleOneError(java.lang.CharSequence correlation_id, java.lang.CharSequence environment_id, java.lang.CharSequence service_id, java.lang.CharSequence exception, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata, java.lang.CharSequence source_message, java.lang.CharSequence source_message_schema_name, java.lang.Integer source_message_offset, java.lang.CharSequence source_url, java.nio.ByteBuffer source_value, java.lang.CharSequence source_schema, java.lang.CharSequence source_schema_id, java.lang.CharSequence topic, java.time.LocalDate timestamp) {
    this.correlation_id = correlation_id;
    this.environment_id = environment_id;
    this.service_id = service_id;
    this.exception = exception;
    this.metadata = metadata;
    this.source_message = source_message;
    this.source_message_schema_name = source_message_schema_name;
    this.source_message_offset = source_message_offset;
    this.source_url = source_url;
    this.source_value = source_value;
    this.source_schema = source_schema;
    this.source_schema_id = source_schema_id;
    this.topic = topic;
    this.timestamp = timestamp;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return correlation_id;
    case 1: return environment_id;
    case 2: return service_id;
    case 3: return exception;
    case 4: return metadata;
    case 5: return source_message;
    case 6: return source_message_schema_name;
    case 7: return source_message_offset;
    case 8: return source_url;
    case 9: return source_value;
    case 10: return source_schema;
    case 11: return source_schema_id;
    case 12: return topic;
    case 13: return timestamp;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: correlation_id = (java.lang.CharSequence)value$; break;
    case 1: environment_id = (java.lang.CharSequence)value$; break;
    case 2: service_id = (java.lang.CharSequence)value$; break;
    case 3: exception = (java.lang.CharSequence)value$; break;
    case 4: metadata = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 5: source_message = (java.lang.CharSequence)value$; break;
    case 6: source_message_schema_name = (java.lang.CharSequence)value$; break;
    case 7: source_message_offset = (java.lang.Integer)value$; break;
    case 8: source_url = (java.lang.CharSequence)value$; break;
    case 9: source_value = (java.nio.ByteBuffer)value$; break;
    case 10: source_schema = (java.lang.CharSequence)value$; break;
    case 11: source_schema_id = (java.lang.CharSequence)value$; break;
    case 12: topic = (java.lang.CharSequence)value$; break;
    case 13: timestamp = (java.time.LocalDate)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'correlation_id' field.
   * @return Unique id for event tracing
   */
  public java.lang.CharSequence getCorrelationId() {
    return correlation_id;
  }


  /**
   * Sets the value of the 'correlation_id' field.
   * Unique id for event tracing
   * @param value the value to set.
   */
  public void setCorrelationId(java.lang.CharSequence value) {
    this.correlation_id = value;
  }

  /**
   * Gets the value of the 'environment_id' field.
   * @return Environment where the error took place. In this object, the environment can be any string. In NormalizedError, there is an enum which needs to be mapped to.
   */
  public java.lang.CharSequence getEnvironmentId() {
    return environment_id;
  }


  /**
   * Sets the value of the 'environment_id' field.
   * Environment where the error took place. In this object, the environment can be any string. In NormalizedError, there is an enum which needs to be mapped to.
   * @param value the value to set.
   */
  public void setEnvironmentId(java.lang.CharSequence value) {
    this.environment_id = value;
  }

  /**
   * Gets the value of the 'service_id' field.
   * @return The identifier of the service. This ...
   */
  public java.lang.CharSequence getServiceId() {
    return service_id;
  }


  /**
   * Sets the value of the 'service_id' field.
   * The identifier of the service. This ...
   * @param value the value to set.
   */
  public void setServiceId(java.lang.CharSequence value) {
    this.service_id = value;
  }

  /**
   * Gets the value of the 'exception' field.
   * @return Error information from the connector
   */
  public java.lang.CharSequence getException() {
    return exception;
  }


  /**
   * Sets the value of the 'exception' field.
   * Error information from the connector
   * @param value the value to set.
   */
  public void setException(java.lang.CharSequence value) {
    this.exception = value;
  }

  /**
   * Gets the value of the 'metadata' field.
   * @return Keys value pairs for any domain specific metadata
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getMetadata() {
    return metadata;
  }


  /**
   * Sets the value of the 'metadata' field.
   * Keys value pairs for any domain specific metadata
   * @param value the value to set.
   */
  public void setMetadata(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.metadata = value;
  }

  /**
   * Gets the value of the 'source_message' field.
   * @return Message that caused the error
   */
  public java.lang.CharSequence getSourceMessage() {
    return source_message;
  }


  /**
   * Sets the value of the 'source_message' field.
   * Message that caused the error
   * @param value the value to set.
   */
  public void setSourceMessage(java.lang.CharSequence value) {
    this.source_message = value;
  }

  /**
   * Gets the value of the 'source_message_schema_name' field.
   * @return Schema name of the source message
   */
  public java.lang.CharSequence getSourceMessageSchemaName() {
    return source_message_schema_name;
  }


  /**
   * Sets the value of the 'source_message_schema_name' field.
   * Schema name of the source message
   * @param value the value to set.
   */
  public void setSourceMessageSchemaName(java.lang.CharSequence value) {
    this.source_message_schema_name = value;
  }

  /**
   * Gets the value of the 'source_message_offset' field.
   * @return Offset of the source message
   */
  public int getSourceMessageOffset() {
    return source_message_offset;
  }


  /**
   * Sets the value of the 'source_message_offset' field.
   * Offset of the source message
   * @param value the value to set.
   */
  public void setSourceMessageOffset(int value) {
    this.source_message_offset = value;
  }

  /**
   * Gets the value of the 'source_url' field.
   * @return URL for the source object
   */
  public java.lang.CharSequence getSourceUrl() {
    return source_url;
  }


  /**
   * Sets the value of the 'source_url' field.
   * URL for the source object
   * @param value the value to set.
   */
  public void setSourceUrl(java.lang.CharSequence value) {
    this.source_url = value;
  }

  /**
   * Gets the value of the 'source_value' field.
   * @return The original object from the source service, which caused the error.
   */
  public java.nio.ByteBuffer getSourceValue() {
    return source_value;
  }


  /**
   * Sets the value of the 'source_value' field.
   * The original object from the source service, which caused the error.
   * @param value the value to set.
   */
  public void setSourceValue(java.nio.ByteBuffer value) {
    this.source_value = value;
  }

  /**
   * Gets the value of the 'source_schema' field.
   * @return Location to the definition of the source object's schema (if any).
   */
  public java.lang.CharSequence getSourceSchema() {
    return source_schema;
  }


  /**
   * Sets the value of the 'source_schema' field.
   * Location to the definition of the source object's schema (if any).
   * @param value the value to set.
   */
  public void setSourceSchema(java.lang.CharSequence value) {
    this.source_schema = value;
  }

  /**
   * Gets the value of the 'source_schema_id' field.
   * @return Identifier of the source object's schema.
   */
  public java.lang.CharSequence getSourceSchemaId() {
    return source_schema_id;
  }


  /**
   * Sets the value of the 'source_schema_id' field.
   * Identifier of the source object's schema.
   * @param value the value to set.
   */
  public void setSourceSchemaId(java.lang.CharSequence value) {
    this.source_schema_id = value;
  }

  /**
   * Gets the value of the 'topic' field.
   * @return Name of the intended destination topic. In this error, we have a destination topic.
   */
  public java.lang.CharSequence getTopic() {
    return topic;
  }


  /**
   * Sets the value of the 'topic' field.
   * Name of the intended destination topic. In this error, we have a destination topic.
   * @param value the value to set.
   */
  public void setTopic(java.lang.CharSequence value) {
    this.topic = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.time.LocalDate getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.time.LocalDate value) {
    this.timestamp = value;
  }

  /**
   * Creates a new ExampleOneError RecordBuilder.
   * @return A new ExampleOneError RecordBuilder
   */
  public static io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder newBuilder() {
    return new io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder();
  }

  /**
   * Creates a new ExampleOneError RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ExampleOneError RecordBuilder
   */
  public static io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder newBuilder(io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder other) {
    if (other == null) {
      return new io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder();
    } else {
      return new io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder(other);
    }
  }

  /**
   * Creates a new ExampleOneError RecordBuilder by copying an existing ExampleOneError instance.
   * @param other The existing instance to copy.
   * @return A new ExampleOneError RecordBuilder
   */
  public static io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder newBuilder(io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError other) {
    if (other == null) {
      return new io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder();
    } else {
      return new io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder(other);
    }
  }

  /**
   * RecordBuilder for ExampleOneError instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ExampleOneError>
    implements org.apache.avro.data.RecordBuilder<ExampleOneError> {

    /** Unique id for event tracing */
    private java.lang.CharSequence correlation_id;
    /** Environment where the error took place. In this object, the environment can be any string. In NormalizedError, there is an enum which needs to be mapped to. */
    private java.lang.CharSequence environment_id;
    /** The identifier of the service. This ... */
    private java.lang.CharSequence service_id;
    /** Error information from the connector */
    private java.lang.CharSequence exception;
    /** Keys value pairs for any domain specific metadata */
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata;
    /** Message that caused the error */
    private java.lang.CharSequence source_message;
    /** Schema name of the source message */
    private java.lang.CharSequence source_message_schema_name;
    /** Offset of the source message */
    private int source_message_offset;
    /** URL for the source object */
    private java.lang.CharSequence source_url;
    /** The original object from the source service, which caused the error. */
    private java.nio.ByteBuffer source_value;
    /** Location to the definition of the source object's schema (if any). */
    private java.lang.CharSequence source_schema;
    /** Identifier of the source object's schema. */
    private java.lang.CharSequence source_schema_id;
    /** Name of the intended destination topic. In this error, we have a destination topic. */
    private java.lang.CharSequence topic;
    private java.time.LocalDate timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.correlation_id)) {
        this.correlation_id = data().deepCopy(fields()[0].schema(), other.correlation_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.environment_id)) {
        this.environment_id = data().deepCopy(fields()[1].schema(), other.environment_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.service_id)) {
        this.service_id = data().deepCopy(fields()[2].schema(), other.service_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.exception)) {
        this.exception = data().deepCopy(fields()[3].schema(), other.exception);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.metadata)) {
        this.metadata = data().deepCopy(fields()[4].schema(), other.metadata);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.source_message)) {
        this.source_message = data().deepCopy(fields()[5].schema(), other.source_message);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.source_message_schema_name)) {
        this.source_message_schema_name = data().deepCopy(fields()[6].schema(), other.source_message_schema_name);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.source_message_offset)) {
        this.source_message_offset = data().deepCopy(fields()[7].schema(), other.source_message_offset);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.source_url)) {
        this.source_url = data().deepCopy(fields()[8].schema(), other.source_url);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.source_value)) {
        this.source_value = data().deepCopy(fields()[9].schema(), other.source_value);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.source_schema)) {
        this.source_schema = data().deepCopy(fields()[10].schema(), other.source_schema);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.source_schema_id)) {
        this.source_schema_id = data().deepCopy(fields()[11].schema(), other.source_schema_id);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.topic)) {
        this.topic = data().deepCopy(fields()[12].schema(), other.topic);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[13].schema(), other.timestamp);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing ExampleOneError instance
     * @param other The existing instance to copy.
     */
    private Builder(io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.correlation_id)) {
        this.correlation_id = data().deepCopy(fields()[0].schema(), other.correlation_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.environment_id)) {
        this.environment_id = data().deepCopy(fields()[1].schema(), other.environment_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.service_id)) {
        this.service_id = data().deepCopy(fields()[2].schema(), other.service_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exception)) {
        this.exception = data().deepCopy(fields()[3].schema(), other.exception);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.metadata)) {
        this.metadata = data().deepCopy(fields()[4].schema(), other.metadata);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.source_message)) {
        this.source_message = data().deepCopy(fields()[5].schema(), other.source_message);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.source_message_schema_name)) {
        this.source_message_schema_name = data().deepCopy(fields()[6].schema(), other.source_message_schema_name);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.source_message_offset)) {
        this.source_message_offset = data().deepCopy(fields()[7].schema(), other.source_message_offset);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.source_url)) {
        this.source_url = data().deepCopy(fields()[8].schema(), other.source_url);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.source_value)) {
        this.source_value = data().deepCopy(fields()[9].schema(), other.source_value);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.source_schema)) {
        this.source_schema = data().deepCopy(fields()[10].schema(), other.source_schema);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.source_schema_id)) {
        this.source_schema_id = data().deepCopy(fields()[11].schema(), other.source_schema_id);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.topic)) {
        this.topic = data().deepCopy(fields()[12].schema(), other.topic);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[13].schema(), other.timestamp);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'correlation_id' field.
      * Unique id for event tracing
      * @return The value.
      */
    public java.lang.CharSequence getCorrelationId() {
      return correlation_id;
    }


    /**
      * Sets the value of the 'correlation_id' field.
      * Unique id for event tracing
      * @param value The value of 'correlation_id'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setCorrelationId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.correlation_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'correlation_id' field has been set.
      * Unique id for event tracing
      * @return True if the 'correlation_id' field has been set, false otherwise.
      */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'correlation_id' field.
      * Unique id for event tracing
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearCorrelationId() {
      correlation_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'environment_id' field.
      * Environment where the error took place. In this object, the environment can be any string. In NormalizedError, there is an enum which needs to be mapped to.
      * @return The value.
      */
    public java.lang.CharSequence getEnvironmentId() {
      return environment_id;
    }


    /**
      * Sets the value of the 'environment_id' field.
      * Environment where the error took place. In this object, the environment can be any string. In NormalizedError, there is an enum which needs to be mapped to.
      * @param value The value of 'environment_id'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setEnvironmentId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.environment_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'environment_id' field has been set.
      * Environment where the error took place. In this object, the environment can be any string. In NormalizedError, there is an enum which needs to be mapped to.
      * @return True if the 'environment_id' field has been set, false otherwise.
      */
    public boolean hasEnvironmentId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'environment_id' field.
      * Environment where the error took place. In this object, the environment can be any string. In NormalizedError, there is an enum which needs to be mapped to.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearEnvironmentId() {
      environment_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'service_id' field.
      * The identifier of the service. This ...
      * @return The value.
      */
    public java.lang.CharSequence getServiceId() {
      return service_id;
    }


    /**
      * Sets the value of the 'service_id' field.
      * The identifier of the service. This ...
      * @param value The value of 'service_id'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setServiceId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.service_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'service_id' field has been set.
      * The identifier of the service. This ...
      * @return True if the 'service_id' field has been set, false otherwise.
      */
    public boolean hasServiceId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'service_id' field.
      * The identifier of the service. This ...
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearServiceId() {
      service_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'exception' field.
      * Error information from the connector
      * @return The value.
      */
    public java.lang.CharSequence getException() {
      return exception;
    }


    /**
      * Sets the value of the 'exception' field.
      * Error information from the connector
      * @param value The value of 'exception'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setException(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.exception = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'exception' field has been set.
      * Error information from the connector
      * @return True if the 'exception' field has been set, false otherwise.
      */
    public boolean hasException() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'exception' field.
      * Error information from the connector
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearException() {
      exception = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'metadata' field.
      * Keys value pairs for any domain specific metadata
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getMetadata() {
      return metadata;
    }


    /**
      * Sets the value of the 'metadata' field.
      * Keys value pairs for any domain specific metadata
      * @param value The value of 'metadata'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setMetadata(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.metadata = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'metadata' field has been set.
      * Keys value pairs for any domain specific metadata
      * @return True if the 'metadata' field has been set, false otherwise.
      */
    public boolean hasMetadata() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'metadata' field.
      * Keys value pairs for any domain specific metadata
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearMetadata() {
      metadata = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_message' field.
      * Message that caused the error
      * @return The value.
      */
    public java.lang.CharSequence getSourceMessage() {
      return source_message;
    }


    /**
      * Sets the value of the 'source_message' field.
      * Message that caused the error
      * @param value The value of 'source_message'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setSourceMessage(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.source_message = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'source_message' field has been set.
      * Message that caused the error
      * @return True if the 'source_message' field has been set, false otherwise.
      */
    public boolean hasSourceMessage() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'source_message' field.
      * Message that caused the error
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearSourceMessage() {
      source_message = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_message_schema_name' field.
      * Schema name of the source message
      * @return The value.
      */
    public java.lang.CharSequence getSourceMessageSchemaName() {
      return source_message_schema_name;
    }


    /**
      * Sets the value of the 'source_message_schema_name' field.
      * Schema name of the source message
      * @param value The value of 'source_message_schema_name'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setSourceMessageSchemaName(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.source_message_schema_name = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'source_message_schema_name' field has been set.
      * Schema name of the source message
      * @return True if the 'source_message_schema_name' field has been set, false otherwise.
      */
    public boolean hasSourceMessageSchemaName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'source_message_schema_name' field.
      * Schema name of the source message
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearSourceMessageSchemaName() {
      source_message_schema_name = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_message_offset' field.
      * Offset of the source message
      * @return The value.
      */
    public int getSourceMessageOffset() {
      return source_message_offset;
    }


    /**
      * Sets the value of the 'source_message_offset' field.
      * Offset of the source message
      * @param value The value of 'source_message_offset'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setSourceMessageOffset(int value) {
      validate(fields()[7], value);
      this.source_message_offset = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'source_message_offset' field has been set.
      * Offset of the source message
      * @return True if the 'source_message_offset' field has been set, false otherwise.
      */
    public boolean hasSourceMessageOffset() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'source_message_offset' field.
      * Offset of the source message
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearSourceMessageOffset() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_url' field.
      * URL for the source object
      * @return The value.
      */
    public java.lang.CharSequence getSourceUrl() {
      return source_url;
    }


    /**
      * Sets the value of the 'source_url' field.
      * URL for the source object
      * @param value The value of 'source_url'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setSourceUrl(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.source_url = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'source_url' field has been set.
      * URL for the source object
      * @return True if the 'source_url' field has been set, false otherwise.
      */
    public boolean hasSourceUrl() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'source_url' field.
      * URL for the source object
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearSourceUrl() {
      source_url = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_value' field.
      * The original object from the source service, which caused the error.
      * @return The value.
      */
    public java.nio.ByteBuffer getSourceValue() {
      return source_value;
    }


    /**
      * Sets the value of the 'source_value' field.
      * The original object from the source service, which caused the error.
      * @param value The value of 'source_value'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setSourceValue(java.nio.ByteBuffer value) {
      validate(fields()[9], value);
      this.source_value = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'source_value' field has been set.
      * The original object from the source service, which caused the error.
      * @return True if the 'source_value' field has been set, false otherwise.
      */
    public boolean hasSourceValue() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'source_value' field.
      * The original object from the source service, which caused the error.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearSourceValue() {
      source_value = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_schema' field.
      * Location to the definition of the source object's schema (if any).
      * @return The value.
      */
    public java.lang.CharSequence getSourceSchema() {
      return source_schema;
    }


    /**
      * Sets the value of the 'source_schema' field.
      * Location to the definition of the source object's schema (if any).
      * @param value The value of 'source_schema'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setSourceSchema(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.source_schema = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'source_schema' field has been set.
      * Location to the definition of the source object's schema (if any).
      * @return True if the 'source_schema' field has been set, false otherwise.
      */
    public boolean hasSourceSchema() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'source_schema' field.
      * Location to the definition of the source object's schema (if any).
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearSourceSchema() {
      source_schema = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_schema_id' field.
      * Identifier of the source object's schema.
      * @return The value.
      */
    public java.lang.CharSequence getSourceSchemaId() {
      return source_schema_id;
    }


    /**
      * Sets the value of the 'source_schema_id' field.
      * Identifier of the source object's schema.
      * @param value The value of 'source_schema_id'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setSourceSchemaId(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.source_schema_id = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'source_schema_id' field has been set.
      * Identifier of the source object's schema.
      * @return True if the 'source_schema_id' field has been set, false otherwise.
      */
    public boolean hasSourceSchemaId() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'source_schema_id' field.
      * Identifier of the source object's schema.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearSourceSchemaId() {
      source_schema_id = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'topic' field.
      * Name of the intended destination topic. In this error, we have a destination topic.
      * @return The value.
      */
    public java.lang.CharSequence getTopic() {
      return topic;
    }


    /**
      * Sets the value of the 'topic' field.
      * Name of the intended destination topic. In this error, we have a destination topic.
      * @param value The value of 'topic'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setTopic(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.topic = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'topic' field has been set.
      * Name of the intended destination topic. In this error, we have a destination topic.
      * @return True if the 'topic' field has been set, false otherwise.
      */
    public boolean hasTopic() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'topic' field.
      * Name of the intended destination topic. In this error, we have a destination topic.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearTopic() {
      topic = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.time.LocalDate getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder setTimestamp(java.time.LocalDate value) {
      validate(fields()[13], value);
      this.timestamp = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public io.firkin.kstreams.normalizer.errors.v1.avsc.ExampleOneError.Builder clearTimestamp() {
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ExampleOneError build() {
      try {
        ExampleOneError record = new ExampleOneError();
        record.correlation_id = fieldSetFlags()[0] ? this.correlation_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.environment_id = fieldSetFlags()[1] ? this.environment_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.service_id = fieldSetFlags()[2] ? this.service_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.exception = fieldSetFlags()[3] ? this.exception : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.metadata = fieldSetFlags()[4] ? this.metadata : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[4]);
        record.source_message = fieldSetFlags()[5] ? this.source_message : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.source_message_schema_name = fieldSetFlags()[6] ? this.source_message_schema_name : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.source_message_offset = fieldSetFlags()[7] ? this.source_message_offset : (java.lang.Integer) defaultValue(fields()[7]);
        record.source_url = fieldSetFlags()[8] ? this.source_url : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.source_value = fieldSetFlags()[9] ? this.source_value : (java.nio.ByteBuffer) defaultValue(fields()[9]);
        record.source_schema = fieldSetFlags()[10] ? this.source_schema : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.source_schema_id = fieldSetFlags()[11] ? this.source_schema_id : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.topic = fieldSetFlags()[12] ? this.topic : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.timestamp = fieldSetFlags()[13] ? this.timestamp : (java.time.LocalDate) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ExampleOneError>
    WRITER$ = (org.apache.avro.io.DatumWriter<ExampleOneError>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ExampleOneError>
    READER$ = (org.apache.avro.io.DatumReader<ExampleOneError>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










